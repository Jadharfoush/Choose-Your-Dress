- name: Trigger Jenkins and Capture Build Number
  id: trigger_jenkins
  run: |
    # Trigger the job and get the queue item number
    queue_item_url=$(curl -s -X POST "http://3.75.204.56:8080/job/ValidationPipeline/build?token=${{ secrets.JENKINS_TOKEN }}" \
      -u ${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }} -H "${{ env.CRUMB }}" -D - \
      | grep 'Location' | awk '{print $2}' | tr -d '\r')

    echo "Queue item URL: $queue_item_url"
    
    # Poll the queue item to get the actual build number
    while true; do
      response=$(curl -s -u ${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }} -H "${{ env.CRUMB }}" "${queue_item_url}api/json")
      build_number=$(echo $response | jq -r '.executable.number')
      
      if [ "$build_number" != "null" ]; then
        echo "Build number: $build_number"
        echo "::set-output name=build_number::$build_number"
        break
      fi
      sleep 5
    done
  env:
    CRUMB: ${{ env.CRUMB }}

- name: Wait for Jenkins Job to Complete
  run: |
    build_number=${{ steps.trigger_jenkins.outputs.build_number }}
    max_timeout=1800  # Maximum time to wait in seconds.
    start_time=$(date +%s)
    
    while true; do
      current_time=$(date +%s)
      elapsed=$(( current_time - start_time ))

      if [ $elapsed -ge $max_timeout ]; then
        echo "Timed out waiting for Jenkins job to complete."
        exit 1
      fi

      response=$(curl -s -u ${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }} -H "${{ env.CRUMB }}" "http://3.75.204.56:8080/job/ValidationPipeline/$build_number/api/json")
      status=$(echo $response | jq -r '.result')
      echo "Current job status: $status"

      if [ "$status" == "SUCCESS" ]; then
        echo "Jenkins job succeeded."
        break
      elif [ "$status" == "FAILURE" ]; then
        echo "Jenkins job failed."
        exit 1
      fi

      sleep 30
    done
  env:
    CRUMB: ${{ env.CRUMB }}
